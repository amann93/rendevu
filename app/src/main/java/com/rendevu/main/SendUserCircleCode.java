package com.rendevu.main;

import android.app.AlertDialog;
import android.app.DialogFragment;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.TextView;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class SendUserCircleCode extends DialogFragment {

    public static SendUserCircleCode newInstance(){
        SendUserCircleCode frag = new SendUserCircleCode();
        return frag;
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View view = null;
        final FirebaseDatabase database;

        try {
            // getting the view layout from dialog_sendcode
            view = inflater.inflate(R.layout.dialog_sendcode, container);
            TextView circleCodeTextView = (TextView) view.findViewById(R.id.GeneratedCode);

            //button to dismiss the dialog frame
            final Button dismissButton = view.findViewById(R.id.close_shareCode_button);

            // Global database references
            DatabaseReference userDatabaseReference;
            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
            database = FirebaseDatabase.getInstance();

            // UID string based on the current logged on user
            String uid = user.getUid();

            // Defining the reference's location on the database
            userDatabaseReference = database.getReference().child("UserCodes");

            // Creates the dialog window
            final AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(getActivity());
            getDialog().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
            alertDialogBuilder.setTitle("Circle Code.").create();

            // circle string that holds the value of the circle is generated by the database
            String circleCode = database.getReference().push().getKey().toString();

            userDatabaseReference.child(circleCode).child("code").setValue(circleCode);
            userDatabaseReference.child(circleCode).child("uid").setValue(uid);

            // Output the code to the text field
            circleCodeTextView.setText(circleCode);

            //logic for the dismiss button
            dismissButton.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    getDialog().dismiss();
                }
            });

        } catch (Exception e) {
            e.printStackTrace();
        }
        return view;
    }
}
